<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
                        <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="cn.com.flaginfo.**" >
	    <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />   
	    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />    
    </context:component-scan>
    <bean id="httpClient" class="cn.com.flaginfo.spring.rest.template.HttpClientUtils"
		factory-method="acceptsUntrustedCertsHttpClient" />

	<bean id="clientHttpRequestFactory"
		class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
		<constructor-arg ref="httpClient" />
	</bean>

	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<constructor-arg ref="clientHttpRequestFactory" />
	</bean>
	<bean id="restTemplateEntry" class="cn.com.flaginfo.spring.rest.template.RestTemplateEntry">
		<constructor-arg ref="restTemplate" />
	</bean>
	<!-- 这个自己配置下 -->
	<!-- <bean id="appSSOFilter" class="cn.com.flaginfo.app.filter.AppSSOFilter"/> -->

    
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJackson2HttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	<mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="objectMapper" ref="customObjectMapper"></property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
	
	<mvc:resources location="/" mapping="/**"/> 
	
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJackson2HttpMessageConverter" />
			</list>
		</property>
	</bean>
	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/" />
		<!-- <property name="suffix" value=".jsp" /> -->
	</bean>
	<bean id="propertyConfigurer"
		  class="cn.com.flaginfo.commons.spring.resource.centerconfig.CustomPropertyPlaceholderConfigurer">
		<!--
			auto:读取本地配置文件和配置中心。（默认）
			local:只读取本地配置文件，不读取配置中心。
			cinfigCenter:只读取配置中心，不读取本地配置文件。
			如果mode属性没有配置，默认auto。
		-->
		<property name="mode" value="cinfigCenter" />
		<!-- 配置中心的dataId和group -->
		<property name="cinfigCenterDatas">
			<map>
				<!-- key:dataId,value:group -->
				<entry key="djtzgg" value="dangjian_configs" />
			</map>
		</property>
		<!-- 下面这个是读取哪些本地配置文件， 如果mode配置为cinfigCenter，则下面配置的文件将不会读取。-->
		<property name="locations">
			<list>
				<value>classpath:*.properties</value>
			</list>
		</property>
	</bean>
</beans>